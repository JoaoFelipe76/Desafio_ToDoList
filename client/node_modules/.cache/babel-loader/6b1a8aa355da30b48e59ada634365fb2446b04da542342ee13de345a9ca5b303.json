{"ast":null,"code":"import axios from 'axios';\nimport { getUserDetails } from '../util/GetUser';\nconst SERVER_URL = 'http://localhost:5000/api/todo';\nconst authHeaders = () => {\n  var _getUserDetails;\n  let userToken = (_getUserDetails = getUserDetails()) === null || _getUserDetails === void 0 ? void 0 : _getUserDetails.token;\n  return {\n    headers: {\n      'Authorization': userToken\n    }\n  };\n};\nconst createToDo = data => {\n  return axios.post(SERVER_URL + '/create-to-do', data, authHeaders());\n};\nconst getAllToDo = userId => {\n  return axios.get(SERVER_URL + '/get-all-to-do/' + userId, authHeaders());\n};\nconst deleteToDo = id => {\n  return axios.delete(SERVER_URL + '/delete-to-do/' + id, authHeaders());\n};\nconst updateToDo = (id, data) => {\n  return axios.patch(SERVER_URL + '/update-to-do/' + id, data, authHeaders());\n};\nconst ToDoServices = {\n  createToDo,\n  getAllToDo,\n  deleteToDo,\n  updateToDo\n};\nexport default ToDoServices;","map":{"version":3,"names":["axios","getUserDetails","SERVER_URL","authHeaders","_getUserDetails","userToken","token","headers","createToDo","data","post","getAllToDo","userId","get","deleteToDo","id","delete","updateToDo","patch","ToDoServices"],"sources":["C:/Users/jflzn/Documents/ToDo/client/src/services/toDoServices.js"],"sourcesContent":["import axios from 'axios';\r\nimport { getUserDetails } from '../util/GetUser';\r\n\r\nconst SERVER_URL = 'http://localhost:5000/api/todo';\r\n\r\nconst authHeaders = ()=>{\r\n    let  userToken = getUserDetails()?.token;\r\n    return {headers:{'Authorization':userToken}}\r\n\r\n}\r\n\r\nconst createToDo = (data)=>{\r\n    return axios.post(SERVER_URL+'/create-to-do',data,authHeaders());\r\n}\r\n\r\nconst getAllToDo = (userId)=>{\r\n    return axios.get(SERVER_URL+'/get-all-to-do/'+userId,authHeaders());\r\n}\r\n\r\nconst deleteToDo = (id)=>{\r\n    return axios.delete(SERVER_URL+'/delete-to-do/'+id,authHeaders());\r\n}\r\n\r\nconst updateToDo = (id,data)=>{\r\n    return axios.patch(SERVER_URL+'/update-to-do/'+id,data,authHeaders());\r\n}\r\n\r\n\r\n\r\nconst ToDoServices = {\r\n    createToDo,\r\n    getAllToDo,\r\n    deleteToDo,\r\n    updateToDo\r\n}\r\n\r\n\r\nexport default ToDoServices;"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,cAAc,QAAQ,iBAAiB;AAEhD,MAAMC,UAAU,GAAG,gCAAgC;AAEnD,MAAMC,WAAW,GAAGA,CAAA,KAAI;EAAA,IAAAC,eAAA;EACpB,IAAKC,SAAS,IAAAD,eAAA,GAAGH,cAAc,CAAC,CAAC,cAAAG,eAAA,uBAAhBA,eAAA,CAAkBE,KAAK;EACxC,OAAO;IAACC,OAAO,EAAC;MAAC,eAAe,EAACF;IAAS;EAAC,CAAC;AAEhD,CAAC;AAED,MAAMG,UAAU,GAAIC,IAAI,IAAG;EACvB,OAAOT,KAAK,CAACU,IAAI,CAACR,UAAU,GAAC,eAAe,EAACO,IAAI,EAACN,WAAW,CAAC,CAAC,CAAC;AACpE,CAAC;AAED,MAAMQ,UAAU,GAAIC,MAAM,IAAG;EACzB,OAAOZ,KAAK,CAACa,GAAG,CAACX,UAAU,GAAC,iBAAiB,GAACU,MAAM,EAACT,WAAW,CAAC,CAAC,CAAC;AACvE,CAAC;AAED,MAAMW,UAAU,GAAIC,EAAE,IAAG;EACrB,OAAOf,KAAK,CAACgB,MAAM,CAACd,UAAU,GAAC,gBAAgB,GAACa,EAAE,EAACZ,WAAW,CAAC,CAAC,CAAC;AACrE,CAAC;AAED,MAAMc,UAAU,GAAGA,CAACF,EAAE,EAACN,IAAI,KAAG;EAC1B,OAAOT,KAAK,CAACkB,KAAK,CAAChB,UAAU,GAAC,gBAAgB,GAACa,EAAE,EAACN,IAAI,EAACN,WAAW,CAAC,CAAC,CAAC;AACzE,CAAC;AAID,MAAMgB,YAAY,GAAG;EACjBX,UAAU;EACVG,UAAU;EACVG,UAAU;EACVG;AACJ,CAAC;AAGD,eAAeE,YAAY","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}