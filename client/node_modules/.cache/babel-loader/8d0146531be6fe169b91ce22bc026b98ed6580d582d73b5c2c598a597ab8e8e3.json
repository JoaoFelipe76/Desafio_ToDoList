{"ast":null,"code":"import React,{useEffect,useState}from'react';import Navbar from'../../components/Navbar';import styles from'./ToDoList.module.css';import{Button,Divider,Empty,Input,Modal,Select,Tag,Tooltip,message}from'antd';import{getErrorMessage}from'../../util/GetError';import{getUserDetails}from'../../util/GetUser';import ToDoServices from'../../services/toDoServices';import{useNavigate}from'react-router';import{CheckCircleFilled,CheckCircleOutlined,DeleteOutlined,EditOutlined}from'@ant-design/icons';import{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";function ToDoList(){const[title,setTitle]=useState(\"\");const[description,setDescription]=useState(\"\");const[isAdding,setIsAdding]=useState(false);const[loading,setLoading]=useState(false);const[allToDo,setAllToDo]=useState([]);const[currentEditItem,setCurrentEditItem]=useState(\"\");const[isEditing,setIsEditing]=useState(false);const[updatedTitle,setUpdatedTitle]=useState(\"\");const[updatedDescription,setUpdatedDescription]=useState(\"\");const[updatedStatus,setUpdatedStatus]=useState(\"\");const[currentTaskType,setCurrentTaskType]=useState(\"incomplete\");const[completedTodo,setCompletedTodo]=useState([]);const[incompletedTodo,setIncompletedTodo]=useState([]);const[currentTodoTask,setCurrentToDoTask]=useState([]);const[filteredToDo,setFilteredToDo]=useState([]);const navigate=useNavigate();const getAllToDo=async()=>{try{let user=getUserDetails();console.log(user===null||user===void 0?void 0:user.userId);const response=await ToDoServices.getAllToDo(user===null||user===void 0?void 0:user.userId);console.log(response.data);setAllToDo(response.data);}catch(err){console.log(err);message.error(getErrorMessage(err));}};useEffect(()=>{let user=getUserDetails();const getAllToDo=async()=>{try{console.log(user===null||user===void 0?void 0:user.userId);const response=await ToDoServices.getAllToDo(user===null||user===void 0?void 0:user.userId);console.log(response.data);setAllToDo(response.data);}catch(err){console.log(err);message.error(getErrorMessage(err));}};if(user&&user!==null&&user!==void 0&&user.userId){getAllToDo();}else{navigate('/login');}},[navigate]);useEffect(()=>{const incomplete=allToDo.filter(item=>item.isCompleted===false);const complete=allToDo.filter(item=>item.isCompleted===true);setIncompletedTodo(incomplete);setCompletedTodo(complete);if(currentTaskType==='incomplete'){setCurrentToDoTask(incomplete);}else{setCurrentToDoTask(complete);}},[allToDo,currentTaskType]);const handleSubmitTask=async()=>{setLoading(true);try{var _getUserDetails;const userId=(_getUserDetails=getUserDetails())===null||_getUserDetails===void 0?void 0:_getUserDetails.userId;const data={title,description,isCompleted:false,createdBy:userId};const response=await ToDoServices.createToDo(data);console.log(response.data);setLoading(false);message.success(\"Tarefa adicionada com Sucesso!\");setIsAdding(false);getAllToDo();}catch(err){console.log(err);setLoading(false);message.error(getErrorMessage(err));}};const getFormattedDate=value=>{let date=new Date(value);let dateString=date.toDateString();let hh=date.getHours();let min=date.getMinutes();let ss=date.getSeconds();let finalDate=`${dateString} at ${hh}:${min}:${ss}`;return finalDate;};const handleEdit=item=>{console.log(item);setCurrentEditItem(item);setUpdatedTitle(item===null||item===void 0?void 0:item.title);setUpdatedDescription(item===null||item===void 0?void 0:item.description);setUpdatedStatus(item===null||item===void 0?void 0:item.isCompleted);setIsEditing(true);};const handleDelete=async item=>{try{const response=await ToDoServices.deleteToDo(item._id);console.log(response.data);message.success(` Tarefa deletada com sucesso!`);getAllToDo();}catch(err){console.log(err);message.error(getErrorMessage(err));}};const handleUpdateStatus=async(id,status)=>{console.log(id);try{const response=await ToDoServices.updateToDo(id,{isCompleted:status});console.log(response.data);message.success(\"Tarefa atualizada !\");getAllToDo();}catch(err){console.log(err);message.error(getErrorMessage(err));}};const handleUpdateTask=async()=>{try{setLoading(true);const data={title:updatedTitle,description:updatedDescription,isCompleted:updatedStatus};console.log(data);const response=await ToDoServices.updateToDo(currentEditItem===null||currentEditItem===void 0?void 0:currentEditItem._id,data);console.log(response.data);message.success(`Tarefa atualizada com Sucesso!`);setLoading(false);setIsEditing(false);getAllToDo();}catch(err){console.log(err);setLoading(false);message.error(getErrorMessage(err));}};const handleTypeChange=value=>{console.log(value);setCurrentTaskType(value);if(value==='incomplete'){setCurrentToDoTask(incompletedTodo);}else{setCurrentToDoTask(completedTodo);}};const handleSearch=e=>{let query=e.target.value;let filteredList=allToDo.filter(item=>item.title.toLowerCase().match(query.toLowerCase()));console.log(filteredList);if(filteredList.length>0&&query){setFilteredToDo(filteredList);}else{setFilteredToDo([]);}};return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(Navbar,{active:\"myTask\"}),/*#__PURE__*/_jsxs(\"section\",{className:styles.toDoWrapper,children:[/*#__PURE__*/_jsxs(\"div\",{className:styles.toDoHeader,children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Suas Tarefas\"}),/*#__PURE__*/_jsx(Input,{style:{width:'50%'},onChange:handleSearch,placeholder:\"Pesquise Sua Tarefa Aqui...\"}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(Button,{onClick:()=>setIsAdding(true),type:\"primary\",size:\"large\",children:\"Adicionar Tarefa\"}),/*#__PURE__*/_jsx(Select,{value:currentTaskType,style:{width:180,marginLeft:'10px'},onChange:handleTypeChange,size:\"large\",options:[{value:\"Incompleta\",label:'Incompleta'},{value:\"Completada\",label:'Completada'}]})]})]}),/*#__PURE__*/_jsx(Divider,{}),/*#__PURE__*/_jsx(\"div\",{className:styles.toDoListCardWrapper,children:filteredToDo.length>0?filteredToDo.map(item=>{return/*#__PURE__*/_jsxs(\"div\",{className:styles.toDoCard,children:[/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsxs(\"div\",{className:styles.toDoCardHeader,children:[/*#__PURE__*/_jsx(\"h3\",{children:item===null||item===void 0?void 0:item.title}),item!==null&&item!==void 0&&item.isCompleted?/*#__PURE__*/_jsx(Tag,{color:\"cyan\",children:\"Completada\"}):/*#__PURE__*/_jsx(Tag,{color:\"red\",children:\"Incompleta\"})]}),/*#__PURE__*/_jsx(\"p\",{children:item===null||item===void 0?void 0:item.description})]}),/*#__PURE__*/_jsxs(\"div\",{className:styles.toDoCardFooter,children:[/*#__PURE__*/_jsx(Tag,{children:getFormattedDate(item===null||item===void 0?void 0:item.createdAt)}),/*#__PURE__*/_jsxs(\"div\",{className:styles.toDoFooterAction,children:[/*#__PURE__*/_jsx(Tooltip,{title:\"Edit Task?\",children:/*#__PURE__*/_jsx(EditOutlined,{onClick:()=>handleEdit(item),className:styles.actionIcon})}),/*#__PURE__*/_jsx(Tooltip,{title:\"Delete Task?\",children:/*#__PURE__*/_jsx(DeleteOutlined,{onClick:()=>handleDelete(item),style:{color:'red'},className:styles.actionIcon})}),item!==null&&item!==void 0&&item.isCompleted?/*#__PURE__*/_jsx(Tooltip,{title:\"Mark as Incomplete\",children:/*#__PURE__*/_jsx(CheckCircleFilled,{onClick:()=>handleUpdateStatus(item._id,false),style:{color:'green'},className:styles.actionIcon})}):/*#__PURE__*/_jsx(Tooltip,{title:\"Marcar como Completa\",children:/*#__PURE__*/_jsx(CheckCircleOutlined,{onClick:()=>handleUpdateStatus(item._id,true),className:styles.actionIcon})})]})]})]},item===null||item===void 0?void 0:item._id);}):currentTodoTask.length>0?currentTodoTask.map(item=>{return/*#__PURE__*/_jsxs(\"div\",{className:styles.toDoCard,children:[/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsxs(\"div\",{className:styles.toDoCardHeader,children:[/*#__PURE__*/_jsx(\"h3\",{children:item===null||item===void 0?void 0:item.title}),item!==null&&item!==void 0&&item.isCompleted?/*#__PURE__*/_jsx(Tag,{color:\"cyan\",children:\"Completada\"}):/*#__PURE__*/_jsx(Tag,{color:\"red\",children:\"Incompleta\"})]}),/*#__PURE__*/_jsx(\"p\",{children:item===null||item===void 0?void 0:item.description})]}),/*#__PURE__*/_jsxs(\"div\",{className:styles.toDoCardFooter,children:[/*#__PURE__*/_jsx(Tag,{children:getFormattedDate(item===null||item===void 0?void 0:item.createdAt)}),/*#__PURE__*/_jsxs(\"div\",{className:styles.toDoFooterAction,children:[/*#__PURE__*/_jsx(Tooltip,{title:\"Editar Tarefa?\",children:/*#__PURE__*/_jsx(EditOutlined,{onClick:()=>handleEdit(item),className:styles.actionIcon})}),/*#__PURE__*/_jsx(Tooltip,{title:\"Deletar Tarefa?\",children:/*#__PURE__*/_jsx(DeleteOutlined,{onClick:()=>handleDelete(item),style:{color:'red'},className:styles.actionIcon})}),item!==null&&item!==void 0&&item.isCompleted?/*#__PURE__*/_jsx(Tooltip,{title:\"Marcar como Incompleta\",children:/*#__PURE__*/_jsx(CheckCircleFilled,{onClick:()=>handleUpdateStatus(item._id,false),style:{color:'green'},className:styles.actionIcon})}):/*#__PURE__*/_jsx(Tooltip,{title:\"Marcar como Completa\",children:/*#__PURE__*/_jsx(CheckCircleOutlined,{onClick:()=>handleUpdateStatus(item._id,true),className:styles.actionIcon})})]})]})]},item===null||item===void 0?void 0:item._id);}):/*#__PURE__*/_jsx(\"div\",{className:styles.noTaskWrapper,children:/*#__PURE__*/_jsx(Empty,{})})}),/*#__PURE__*/_jsxs(Modal,{confirmLoading:loading,title:\"Adicionar Nova Tarefa\",open:isAdding,onOk:handleSubmitTask,onCancel:()=>setIsAdding(false),children:[/*#__PURE__*/_jsx(Input,{style:{marginBottom:'1rem'},placeholder:\"T\\xEDtulo\",value:title,onChange:e=>setTitle(e.target.value)}),/*#__PURE__*/_jsx(Input.TextArea,{placeholder:\"Descri\\xE7\\xE3o\",value:description,onChange:e=>setDescription(e.target.value)})]}),/*#__PURE__*/_jsxs(Modal,{confirmLoading:loading,title:`Atualizar ${currentEditItem.title}`,open:isEditing,onOk:handleUpdateTask,onCancel:()=>setIsEditing(false),children:[/*#__PURE__*/_jsx(Input,{style:{marginBottom:'1rem'},placeholder:\"Atualizar t\\xEDtulo\",value:updatedTitle,onChange:e=>setUpdatedTitle(e.target.value)}),/*#__PURE__*/_jsx(Input.TextArea,{style:{marginBottom:'1rem'},placeholder:\"Atualizar descri\\xE7\\xE3o\",value:updatedDescription,onChange:e=>setUpdatedDescription(e.target.value)}),/*#__PURE__*/_jsx(Select,{onChange:value=>setUpdatedStatus(value),value:updatedStatus,options:[{value:false,label:'Incompleta'},{value:true,label:'Completada'}]})]})]})]});}export default ToDoList;","map":{"version":3,"names":["React","useEffect","useState","Navbar","styles","Button","Divider","Empty","Input","Modal","Select","Tag","Tooltip","message","getErrorMessage","getUserDetails","ToDoServices","useNavigate","CheckCircleFilled","CheckCircleOutlined","DeleteOutlined","EditOutlined","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","ToDoList","title","setTitle","description","setDescription","isAdding","setIsAdding","loading","setLoading","allToDo","setAllToDo","currentEditItem","setCurrentEditItem","isEditing","setIsEditing","updatedTitle","setUpdatedTitle","updatedDescription","setUpdatedDescription","updatedStatus","setUpdatedStatus","currentTaskType","setCurrentTaskType","completedTodo","setCompletedTodo","incompletedTodo","setIncompletedTodo","currentTodoTask","setCurrentToDoTask","filteredToDo","setFilteredToDo","navigate","getAllToDo","user","console","log","userId","response","data","err","error","incomplete","filter","item","isCompleted","complete","handleSubmitTask","_getUserDetails","createdBy","createToDo","success","getFormattedDate","value","date","Date","dateString","toDateString","hh","getHours","min","getMinutes","ss","getSeconds","finalDate","handleEdit","handleDelete","deleteToDo","_id","handleUpdateStatus","id","status","updateToDo","handleUpdateTask","handleTypeChange","handleSearch","e","query","target","filteredList","toLowerCase","match","length","children","active","className","toDoWrapper","toDoHeader","style","width","onChange","placeholder","onClick","type","size","marginLeft","options","label","toDoListCardWrapper","map","toDoCard","toDoCardHeader","color","toDoCardFooter","createdAt","toDoFooterAction","actionIcon","noTaskWrapper","confirmLoading","open","onOk","onCancel","marginBottom","TextArea"],"sources":["C:/Users/jflzn/Documents/ToDo/client/src/pages/ToDo/ToDoList.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react'\r\nimport Navbar from '../../components/Navbar'\r\nimport styles from './ToDoList.module.css';\r\nimport { Button, Divider, Empty, Input, Modal, Select, Tag, Tooltip, message } from 'antd';\r\nimport {getErrorMessage} from '../../util/GetError';\r\nimport { getUserDetails } from '../../util/GetUser';\r\nimport ToDoServices from '../../services/toDoServices';\r\nimport { useNavigate } from 'react-router';\r\nimport { CheckCircleFilled, CheckCircleOutlined, DeleteOutlined, EditOutlined } from '@ant-design/icons';\r\n\r\n\r\nfunction ToDoList() {\r\n   const [title,setTitle] = useState(\"\");\r\n   const [description,setDescription] = useState(\"\");\r\n   const [isAdding,setIsAdding] = useState(false);\r\n  const [loading,setLoading] = useState(false);\r\n  const [allToDo,setAllToDo] = useState([]);\r\n  const [currentEditItem,setCurrentEditItem] = useState(\"\");\r\n  const [isEditing,setIsEditing] = useState(false);\r\n  const [updatedTitle,setUpdatedTitle] = useState(\"\");\r\n  const [updatedDescription,setUpdatedDescription] = useState(\"\");\r\n  const [updatedStatus,setUpdatedStatus] = useState(\"\");\r\n  const [currentTaskType,setCurrentTaskType] = useState(\"incomplete\");\r\n  const [completedTodo,setCompletedTodo] = useState([]);\r\n  const [incompletedTodo,setIncompletedTodo] = useState([]);\r\n  const [currentTodoTask,setCurrentToDoTask] = useState([]);\r\n  const [filteredToDo,setFilteredToDo] = useState([]);\r\n\r\n  const navigate = useNavigate();\r\n\r\n  const getAllToDo = async ()=>{\r\n    try{\r\n      let user = getUserDetails();\r\n      console.log(user?.userId);\r\n      const response = await ToDoServices.getAllToDo(user?.userId);\r\n      console.log(response.data);\r\n      setAllToDo(response.data);\r\n    }catch(err){\r\n      console.log(err);\r\n      message.error(getErrorMessage(err));\r\n    }\r\n  }\r\n\r\n  useEffect(()=>{\r\n      let user = getUserDetails();\r\n        const getAllToDo = async ()=>{\r\n          try{\r\n            console.log(user?.userId);\r\n            const response = await ToDoServices.getAllToDo(user?.userId);\r\n            console.log(response.data);\r\n            setAllToDo(response.data);\r\n          }catch(err){\r\n            console.log(err);\r\n            message.error(getErrorMessage(err));\r\n          }\r\n        }\r\n      if(user && user?.userId){\r\n        getAllToDo();\r\n      }else{\r\n        navigate('/login');\r\n      }\r\n\r\n  },[navigate]);\r\n\r\n  useEffect(()=>{\r\n      const incomplete = allToDo.filter((item)=>item.isCompleted===false);\r\n      const complete = allToDo.filter((item)=>item.isCompleted===true);\r\n      setIncompletedTodo(incomplete);\r\n      setCompletedTodo(complete);\r\n      if(currentTaskType==='incomplete'){\r\n        setCurrentToDoTask(incomplete);\r\n      }else{\r\n        setCurrentToDoTask(complete)\r\n      }\r\n  },[allToDo,currentTaskType])\r\n\r\n   const handleSubmitTask = async ()=>{\r\n    setLoading(true);\r\n    try{\r\n      const userId = getUserDetails()?.userId;\r\n      const data = {\r\n        title,\r\n        description,\r\n        isCompleted:false,\r\n        createdBy:userId\r\n      }\r\n      const response = await ToDoServices.createToDo(data);\r\n      console.log(response.data);\r\n      setLoading(false);\r\n      message.success(\"Tarefa adicionada com Sucesso!\");\r\n      setIsAdding(false);\r\n      getAllToDo();\r\n    }catch(err){\r\n      console.log(err);\r\n      setLoading(false);\r\n      message.error(getErrorMessage(err))\r\n    }\r\n   }\r\n\r\n   const getFormattedDate = (value)=>{\r\n    let  date = new Date(value);\r\n    let dateString = date.toDateString();\r\n    let hh = date.getHours();\r\n    let min = date.getMinutes();\r\n    let ss = date.getSeconds();\r\n    let finalDate = `${dateString} at ${hh}:${min}:${ss}`;\r\n    return finalDate;\r\n  }\r\n\r\n  const handleEdit = (item)=>{\r\n    console.log(item);\r\n    setCurrentEditItem(item);\r\n    setUpdatedTitle(item?.title);\r\n    setUpdatedDescription(item?.description);\r\n    setUpdatedStatus(item?.isCompleted);\r\n    setIsEditing(true);\r\n  };\r\n\r\n  const handleDelete = async (item)=>{\r\n    try{\r\n      const response = await ToDoServices.deleteToDo(item._id);\r\n      console.log(response.data);\r\n      message.success(` Tarefa deletada com sucesso!`);\r\n      getAllToDo();\r\n    }catch(err){\r\n      console.log(err);\r\n      message.error(getErrorMessage(err));\r\n    }\r\n  }\r\n\r\n  const handleUpdateStatus = async (id,status)=>{\r\n    console.log(id);\r\n    try{\r\n      const response = await ToDoServices.updateToDo(id,{isCompleted:status});\r\n      console.log(response.data);\r\n      message.success(\"Tarefa atualizada !\");\r\n      getAllToDo();\r\n    }catch(err){\r\n      console.log(err);\r\n      message.error(getErrorMessage(err));\r\n    }\r\n  }\r\n\r\n  const handleUpdateTask = async ()=>{\r\n      try{\r\n        setLoading(true);\r\n        const data = {\r\n          title:updatedTitle,\r\n          description:updatedDescription,\r\n          isCompleted:updatedStatus\r\n        };\r\n        console.log(data);\r\n        const response = await ToDoServices.updateToDo(currentEditItem?._id,data);\r\n        console.log(response.data);\r\n        message.success(`Tarefa atualizada com Sucesso!`);\r\n        setLoading(false);\r\n        setIsEditing(false);\r\n        getAllToDo();\r\n      }catch(err){\r\n        console.log(err);\r\n        setLoading(false);\r\n        message.error(getErrorMessage(err))\r\n      }\r\n  }\r\n\r\n  const handleTypeChange = (value)=>{\r\n    console.log(value);\r\n    setCurrentTaskType(value);\r\n    if(value==='incomplete'){\r\n      setCurrentToDoTask(incompletedTodo);\r\n    }else{\r\n      setCurrentToDoTask(completedTodo);\r\n    }\r\n  }\r\n\r\n  const handleSearch = (e)=>{\r\n    let query = e.target.value;\r\n    let filteredList = allToDo.filter((item)=>item.title.toLowerCase().match(query.toLowerCase()));\r\n    console.log(filteredList);\r\n    if(filteredList.length > 0 && query){\r\n      setFilteredToDo(filteredList);\r\n    }else{\r\n      setFilteredToDo([]);\r\n    }\r\n  }\r\n  return (\r\n    <>\r\n    <Navbar  active={\"myTask\"}/>\r\n    <section className={styles.toDoWrapper}>\r\n        <div className={styles.toDoHeader}>\r\n            <h2>Suas Tarefas</h2>\r\n            <Input style={{width:'50%'}} onChange={handleSearch} placeholder='Pesquise Sua Tarefa Aqui...' />\r\n            <div>\r\n              <Button onClick={()=>setIsAdding(true)} type=\"primary\" size=\"large\">Adicionar Tarefa</Button>\r\n              <Select\r\n                value={currentTaskType}\r\n                style={{width:180,marginLeft:'10px'}}\r\n                onChange={handleTypeChange}\r\n                size=\"large\"\r\n\r\n                options={[\r\n                  {value:\"Incompleta\",label:'Incompleta'},\r\n                  {value:\"Completada\",label:'Completada'}\r\n                ]}\r\n              />\r\n\r\n             \r\n            </div>\r\n        </div>\r\n        <Divider />\r\n\r\n        <div className={styles.toDoListCardWrapper}>\r\n          {filteredToDo.length > 0 ? filteredToDo.map((item)=>{\r\n            return(\r\n              <div key={item?._id} className={styles.toDoCard}>\r\n              <div >\r\n              <div className={styles.toDoCardHeader}>\r\n              <h3>{item?.title}</h3>\r\n              {item?.isCompleted ? <Tag color=\"cyan\">Completada</Tag> : <Tag color=\"red\">Incompleta</Tag>}\r\n              </div> \r\n              <p>{item?.description}</p>\r\n               </div>\r\n               <div className={styles.toDoCardFooter}>\r\n               <Tag>{getFormattedDate(item?.createdAt)}</Tag>\r\n               <div className={styles.toDoFooterAction}>\r\n               <Tooltip title=\"Edit Task?\"><EditOutlined onClick={()=>handleEdit(item)} className={styles.actionIcon} /></Tooltip>\r\n                 <Tooltip title=\"Delete Task?\"><DeleteOutlined onClick={()=>handleDelete(item)} style={{color:'red'}}   className={styles.actionIcon}/></Tooltip>\r\n                 {item?.isCompleted ? <Tooltip title=\"Mark as Incomplete\"><CheckCircleFilled onClick={()=>handleUpdateStatus(item._id,false)} style={{color:'green'}}  className={styles.actionIcon} /></Tooltip> :<Tooltip title=\"Marcar como Completa\"><CheckCircleOutlined onClick={()=>handleUpdateStatus(item._id,true)}  className={styles.actionIcon}/></Tooltip>}\r\n               </div>  \r\n               </div>\r\n               \r\n           </div>  \r\n            )\r\n          }) : currentTodoTask.length > 0  ? currentTodoTask.map((item)=>{\r\n            return(\r\n              <div key={item?._id} className={styles.toDoCard}>\r\n              <div >\r\n              <div className={styles.toDoCardHeader}>\r\n              <h3>{item?.title}</h3>\r\n              {item?.isCompleted ? <Tag color=\"cyan\">Completada</Tag> : <Tag color=\"red\">Incompleta</Tag>}\r\n              </div> \r\n              <p>{item?.description}</p>\r\n               </div>\r\n             \r\n               <div className={styles.toDoCardFooter}>\r\n               <Tag>{getFormattedDate(item?.createdAt)}</Tag>\r\n               <div className={styles.toDoFooterAction}>\r\n               <Tooltip title=\"Editar Tarefa?\"><EditOutlined onClick={()=>handleEdit(item)} className={styles.actionIcon} /></Tooltip>\r\n                 <Tooltip title=\"Deletar Tarefa?\"><DeleteOutlined onClick={()=>handleDelete(item)} style={{color:'red'}}   className={styles.actionIcon}/></Tooltip>\r\n                 {item?.isCompleted ? <Tooltip title=\"Marcar como Incompleta\"><CheckCircleFilled onClick={()=>handleUpdateStatus(item._id,false)} style={{color:'green'}}  className={styles.actionIcon} /></Tooltip> :<Tooltip title=\"Marcar como Completa\"><CheckCircleOutlined onClick={()=>handleUpdateStatus(item._id,true)}  className={styles.actionIcon}/></Tooltip>}\r\n               </div>  \r\n               </div>\r\n               \r\n           </div>  \r\n            )\r\n          }) : \r\n\r\n          <div className={styles.noTaskWrapper}>\r\n          <Empty />\r\n        </div> \r\n          \r\n          }\r\n        </div>\r\n\r\n       \r\n        <Modal confirmLoading={loading} title=\"Adicionar Nova Tarefa\" open={isAdding} onOk={handleSubmitTask} onCancel={()=>setIsAdding(false)}>\r\n        <Input style={{marginBottom:'1rem'}} placeholder='Título' value={title} onChange={(e)=>setTitle(e.target.value)} />\r\n        <Input.TextArea placeholder='Descrição' value={description} onChange={(e)=>setDescription(e.target.value)} />\r\n      </Modal>\r\n\r\n      <Modal confirmLoading={loading} title={`Atualizar ${currentEditItem.title}`} open={isEditing} onOk={handleUpdateTask} onCancel={()=>setIsEditing(false)}>\r\n        <Input style={{marginBottom:'1rem'}} placeholder='Atualizar título' value={updatedTitle} onChange={(e)=>setUpdatedTitle(e.target.value)} />\r\n        <Input.TextArea style={{marginBottom:'1rem'}} placeholder='Atualizar descrição' value={updatedDescription} onChange={(e)=>setUpdatedDescription(e.target.value)} />\r\n        <Select\r\n      \r\n      onChange={(value)=>setUpdatedStatus(value)}\r\n      value={updatedStatus}\r\n      options={[\r\n        \r\n        {\r\n          value: false,\r\n          label: 'Incompleta',\r\n        },\r\n\r\n        {\r\n          value: true,\r\n          label: 'Completada',\r\n        },\r\n     \r\n      ]}\r\n    />\r\n      </Modal>\r\n    </section>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default ToDoList"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}