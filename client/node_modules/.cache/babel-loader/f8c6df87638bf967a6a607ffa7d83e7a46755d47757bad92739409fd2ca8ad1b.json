{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jflzn\\\\Documents\\\\ToDo\\\\client\\\\src\\\\pages\\\\ToDo\\\\ToDoList.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport Navbar from '../../components/Navbar';\nimport styles from './ToDoList.module.css';\nimport { Button, Divider, Empty, Input, Modal, Select, Tag, Tooltip, message } from 'antd';\nimport { getErrorMessage } from '../../util/GetError';\nimport { getUserDetails } from '../../util/GetUser';\nimport ToDoServices from '../../services/toDoServices';\nimport { useNavigate } from 'react-router';\nimport { CheckCircleFilled, CheckCircleOutlined, DeleteOutlined, EditOutlined } from '@ant-design/icons';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction ToDoList() {\n  _s();\n  const [title, setTitle] = useState(\"\");\n  const [description, setDescription] = useState(\"\");\n  const [isAdding, setIsAdding] = useState(false);\n  const [loading, setLoading] = useState(false);\n  const [allToDo, setAllToDo] = useState([]);\n  const [currentEditItem, setCurrentEditItem] = useState(\"\");\n  const [isEditing, setIsEditing] = useState(false);\n  const [updatedTitle, setUpdatedTitle] = useState(\"\");\n  const [updatedDescription, setUpdatedDescription] = useState(\"\");\n  const [updatedStatus, setUpdatedStatus] = useState(\"\");\n  const [currentTaskType, setCurrentTaskType] = useState(\"incomplete\");\n  const [completedTodo, setCompletedTodo] = useState([]);\n  const [incompletedTodo, setIncompletedTodo] = useState([]);\n  const [currentTodoTask, setCurrentToDoTask] = useState([]);\n  const [filteredToDo, setFilteredToDo] = useState([]);\n  const navigate = useNavigate();\n  const getAllToDo = async () => {\n    try {\n      let user = getUserDetails();\n      console.log(user === null || user === void 0 ? void 0 : user.userId);\n      const response = await ToDoServices.getAllToDo(user === null || user === void 0 ? void 0 : user.userId);\n      console.log(response.data);\n      setAllToDo(response.data);\n    } catch (err) {\n      console.log(err);\n      message.error(getErrorMessage(err));\n    }\n  };\n  useEffect(() => {\n    let user = getUserDetails();\n    const getAllToDo = async () => {\n      try {\n        console.log(user === null || user === void 0 ? void 0 : user.userId);\n        const response = await ToDoServices.getAllToDo(user === null || user === void 0 ? void 0 : user.userId);\n        console.log(response.data);\n        setAllToDo(response.data);\n      } catch (err) {\n        console.log(err);\n        message.error(getErrorMessage(err));\n      }\n    };\n    if (user && user !== null && user !== void 0 && user.userId) {\n      getAllToDo();\n    } else {\n      navigate('/login');\n    }\n  }, [navigate]);\n  useEffect(() => {\n    const incomplete = allToDo.filter(item => item.isCompleted === false);\n    const complete = allToDo.filter(item => item.isCompleted === true);\n    setIncompletedTodo(incomplete);\n    setCompletedTodo(complete);\n    if (currentTaskType === 'incomplete') {\n      setCurrentToDoTask(incomplete);\n    } else {\n      setCurrentToDoTask(complete);\n    }\n  }, [allToDo, currentTaskType]);\n  const handleSubmitTask = async () => {\n    setLoading(true);\n    try {\n      var _getUserDetails;\n      const userId = (_getUserDetails = getUserDetails()) === null || _getUserDetails === void 0 ? void 0 : _getUserDetails.userId;\n      const data = {\n        title,\n        description,\n        isCompleted: false,\n        createdBy: userId\n      };\n      const response = await ToDoServices.createToDo(data);\n      console.log(response.data);\n      setLoading(false);\n      message.success(\"Tarefa adicionada com Sucesso!\");\n      setIsAdding(false);\n      getAllToDo();\n    } catch (err) {\n      console.log(err);\n      setLoading(false);\n      message.error(getErrorMessage(err));\n    }\n  };\n  const getFormattedDate = value => {\n    let date = new Date(value);\n    let dateString = date.toDateString();\n    let hh = date.getHours();\n    let min = date.getMinutes();\n    let ss = date.getSeconds();\n    let finalDate = `${dateString} at ${hh}:${min}:${ss}`;\n    return finalDate;\n  };\n  const handleEdit = item => {\n    console.log(item);\n    setCurrentEditItem(item);\n    setUpdatedTitle(item === null || item === void 0 ? void 0 : item.title);\n    setUpdatedDescription(item === null || item === void 0 ? void 0 : item.description);\n    setUpdatedStatus(item === null || item === void 0 ? void 0 : item.isCompleted);\n    setIsEditing(true);\n  };\n  const handleDelete = async item => {\n    try {\n      const response = await ToDoServices.deleteToDo(item._id);\n      console.log(response.data);\n      message.success(` Tarefa deletada com Sucesso!`);\n      getAllToDo();\n    } catch (err) {\n      console.log(err);\n      message.error(getErrorMessage(err));\n    }\n  };\n  const handleUpdateStatus = async (id, status) => {\n    console.log(id);\n    try {\n      const response = await ToDoServices.updateToDo(id, {\n        isCompleted: status\n      });\n      console.log(response.data);\n      message.success(\"Tarefa completada !\");\n      getAllToDo();\n    } catch (err) {\n      console.log(err);\n      message.error(getErrorMessage(err));\n    }\n  };\n  const handleUpdateTask = async () => {\n    try {\n      setLoading(true);\n      const data = {\n        title: updatedTitle,\n        description: updatedDescription,\n        isCompleted: updatedStatus\n      };\n      console.log(data);\n      const response = await ToDoServices.updateToDo(currentEditItem === null || currentEditItem === void 0 ? void 0 : currentEditItem._id, data);\n      console.log(response.data);\n      message.success(`Tarefa atualizada com Sucesso!`);\n      setLoading(false);\n      setIsEditing(false);\n      getAllToDo();\n    } catch (err) {\n      console.log(err);\n      setLoading(false);\n      message.error(getErrorMessage(err));\n    }\n  };\n  const handleTypeChange = value => {\n    console.log(value);\n    setCurrentTaskType(value);\n    if (value === 'incomplete') {\n      setCurrentToDoTask(incompletedTodo);\n    } else {\n      setCurrentToDoTask(completedTodo);\n    }\n  };\n  const handleSearch = e => {\n    let query = e.target.value;\n    let filteredList = allToDo.filter(item => item.title.toLowerCase().match(query.toLowerCase()));\n    console.log(filteredList);\n    if (filteredList.length > 0 && query) {\n      setFilteredToDo(filteredList);\n    } else {\n      setFilteredToDo([]);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {\n      active: \"myTask\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      className: styles.toDoWrapper,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.toDoHeader,\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Suas Tarefas\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Input, {\n          style: {\n            width: '50%'\n          },\n          onChange: handleSearch,\n          placeholder: \"Pesquise Sua Tarefa Aqui...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            onClick: () => setIsAdding(true),\n            type: \"primary\",\n            size: \"large\",\n            children: \"Adicionar Tarefa\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 194,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Select, {\n            value: currentTaskType,\n            style: {\n              width: 180,\n              marginLeft: '10px'\n            },\n            onChange: handleTypeChange,\n            size: \"large\",\n            options: [{\n              value: \"incomplete\",\n              label: 'Incomplete'\n            }, {\n              value: \"complete\",\n              label: 'Complete'\n            }]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 195,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 193,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.toDoListCardWrapper,\n        children: filteredToDo.length > 0 ? filteredToDo.map(item => {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.toDoCard,\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: styles.toDoCardHeader,\n                children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                  children: item === null || item === void 0 ? void 0 : item.title\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 218,\n                  columnNumber: 15\n                }, this), item !== null && item !== void 0 && item.isCompleted ? /*#__PURE__*/_jsxDEV(Tag, {\n                  color: \"cyan\",\n                  children: \"Completed\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 219,\n                  columnNumber: 36\n                }, this) : /*#__PURE__*/_jsxDEV(Tag, {\n                  color: \"red\",\n                  children: \"Incomplete\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 219,\n                  columnNumber: 72\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 217,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: item === null || item === void 0 ? void 0 : item.description\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 221,\n                columnNumber: 15\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 216,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: styles.toDoCardFooter,\n              children: [/*#__PURE__*/_jsxDEV(Tag, {\n                children: getFormattedDate(item === null || item === void 0 ? void 0 : item.createdAt)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 225,\n                columnNumber: 16\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: styles.toDoFooterAction,\n                children: [/*#__PURE__*/_jsxDEV(Tooltip, {\n                  title: \"Edit Task?\",\n                  children: /*#__PURE__*/_jsxDEV(EditOutlined, {\n                    onClick: () => handleEdit(item),\n                    className: styles.actionIcon\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 227,\n                    columnNumber: 44\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 227,\n                  columnNumber: 16\n                }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n                  title: \"Delete Task?\",\n                  children: /*#__PURE__*/_jsxDEV(DeleteOutlined, {\n                    onClick: () => handleDelete(item),\n                    style: {\n                      color: 'red'\n                    },\n                    className: styles.actionIcon\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 228,\n                    columnNumber: 48\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 228,\n                  columnNumber: 18\n                }, this), item !== null && item !== void 0 && item.isCompleted ? /*#__PURE__*/_jsxDEV(Tooltip, {\n                  title: \"Mark as Incomplete\",\n                  children: /*#__PURE__*/_jsxDEV(CheckCircleFilled, {\n                    onClick: () => handleUpdateStatus(item._id, false),\n                    style: {\n                      color: 'green'\n                    },\n                    className: styles.actionIcon\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 229,\n                    columnNumber: 75\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 229,\n                  columnNumber: 39\n                }, this) : /*#__PURE__*/_jsxDEV(Tooltip, {\n                  title: \"Mark as Completed\",\n                  children: /*#__PURE__*/_jsxDEV(CheckCircleOutlined, {\n                    onClick: () => handleUpdateStatus(item._id, true),\n                    className: styles.actionIcon\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 229,\n                    columnNumber: 247\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 229,\n                  columnNumber: 212\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 226,\n                columnNumber: 16\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 224,\n              columnNumber: 16\n            }, this)]\n          }, item === null || item === void 0 ? void 0 : item._id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 215,\n            columnNumber: 15\n          }, this);\n        }) : currentTodoTask.length > 0 ? currentTodoTask.map(item => {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.toDoCard,\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: styles.toDoCardHeader,\n                children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                  children: item === null || item === void 0 ? void 0 : item.title\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 240,\n                  columnNumber: 15\n                }, this), item !== null && item !== void 0 && item.isCompleted ? /*#__PURE__*/_jsxDEV(Tag, {\n                  color: \"cyan\",\n                  children: \"Completed\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 241,\n                  columnNumber: 36\n                }, this) : /*#__PURE__*/_jsxDEV(Tag, {\n                  color: \"red\",\n                  children: \"Incomplete\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 241,\n                  columnNumber: 72\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 239,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: item === null || item === void 0 ? void 0 : item.description\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 243,\n                columnNumber: 15\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 238,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: styles.toDoCardFooter,\n              children: [/*#__PURE__*/_jsxDEV(Tag, {\n                children: getFormattedDate(item === null || item === void 0 ? void 0 : item.createdAt)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 247,\n                columnNumber: 16\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: styles.toDoFooterAction,\n                children: [/*#__PURE__*/_jsxDEV(Tooltip, {\n                  title: \"Editar Tarefa?\",\n                  children: /*#__PURE__*/_jsxDEV(EditOutlined, {\n                    onClick: () => handleEdit(item),\n                    className: styles.actionIcon\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 249,\n                    columnNumber: 48\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 249,\n                  columnNumber: 16\n                }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n                  title: \"Deletar Tarefa?\",\n                  children: /*#__PURE__*/_jsxDEV(DeleteOutlined, {\n                    onClick: () => handleDelete(item),\n                    style: {\n                      color: 'red'\n                    },\n                    className: styles.actionIcon\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 250,\n                    columnNumber: 51\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 250,\n                  columnNumber: 18\n                }, this), item !== null && item !== void 0 && item.isCompleted ? /*#__PURE__*/_jsxDEV(Tooltip, {\n                  title: \"Mark as Incomplete\",\n                  children: /*#__PURE__*/_jsxDEV(CheckCircleFilled, {\n                    onClick: () => handleUpdateStatus(item._id, false),\n                    style: {\n                      color: 'green'\n                    },\n                    className: styles.actionIcon\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 251,\n                    columnNumber: 75\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 251,\n                  columnNumber: 39\n                }, this) : /*#__PURE__*/_jsxDEV(Tooltip, {\n                  title: \"Mark as Completed\",\n                  children: /*#__PURE__*/_jsxDEV(CheckCircleOutlined, {\n                    onClick: () => handleUpdateStatus(item._id, true),\n                    className: styles.actionIcon\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 251,\n                    columnNumber: 247\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 251,\n                  columnNumber: 212\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 248,\n                columnNumber: 16\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 246,\n              columnNumber: 16\n            }, this)]\n          }, item === null || item === void 0 ? void 0 : item._id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 237,\n            columnNumber: 15\n          }, this);\n        }) : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.noTaskWrapper,\n          children: /*#__PURE__*/_jsxDEV(Empty, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 260,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 259,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Modal, {\n        confirmLoading: loading,\n        title: \"Add New To Do Task\",\n        open: isAdding,\n        onOk: handleSubmitTask,\n        onCancel: () => setIsAdding(false),\n        children: [/*#__PURE__*/_jsxDEV(Input, {\n          style: {\n            marginBottom: '1rem'\n          },\n          placeholder: \"Title\",\n          value: title,\n          onChange: e => setTitle(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 268,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Input.TextArea, {\n          placeholder: \"Description\",\n          value: description,\n          onChange: e => setDescription(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 269,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 267,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Modal, {\n        confirmLoading: loading,\n        title: `Update ${currentEditItem.title}`,\n        open: isEditing,\n        onOk: handleUpdateTask,\n        onCancel: () => setIsEditing(false),\n        children: [/*#__PURE__*/_jsxDEV(Input, {\n          style: {\n            marginBottom: '1rem'\n          },\n          placeholder: \"Updated Title\",\n          value: updatedTitle,\n          onChange: e => setUpdatedTitle(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 273,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Input.TextArea, {\n          style: {\n            marginBottom: '1rem'\n          },\n          placeholder: \"Updated Description\",\n          value: updatedDescription,\n          onChange: e => setUpdatedDescription(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 274,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Select, {\n          onChange: value => setUpdatedStatus(value),\n          value: updatedStatus,\n          options: [{\n            value: false,\n            label: 'Not Completed'\n          }, {\n            value: true,\n            label: 'Completed'\n          }]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 275,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 272,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true);\n}\n_s(ToDoList, \"NImxgPwYzzxXYJgB3CKY+4ug5NY=\", false, function () {\n  return [useNavigate];\n});\n_c = ToDoList;\nexport default ToDoList;\nvar _c;\n$RefreshReg$(_c, \"ToDoList\");","map":{"version":3,"names":["React","useEffect","useState","Navbar","styles","Button","Divider","Empty","Input","Modal","Select","Tag","Tooltip","message","getErrorMessage","getUserDetails","ToDoServices","useNavigate","CheckCircleFilled","CheckCircleOutlined","DeleteOutlined","EditOutlined","jsxDEV","_jsxDEV","Fragment","_Fragment","ToDoList","_s","title","setTitle","description","setDescription","isAdding","setIsAdding","loading","setLoading","allToDo","setAllToDo","currentEditItem","setCurrentEditItem","isEditing","setIsEditing","updatedTitle","setUpdatedTitle","updatedDescription","setUpdatedDescription","updatedStatus","setUpdatedStatus","currentTaskType","setCurrentTaskType","completedTodo","setCompletedTodo","incompletedTodo","setIncompletedTodo","currentTodoTask","setCurrentToDoTask","filteredToDo","setFilteredToDo","navigate","getAllToDo","user","console","log","userId","response","data","err","error","incomplete","filter","item","isCompleted","complete","handleSubmitTask","_getUserDetails","createdBy","createToDo","success","getFormattedDate","value","date","Date","dateString","toDateString","hh","getHours","min","getMinutes","ss","getSeconds","finalDate","handleEdit","handleDelete","deleteToDo","_id","handleUpdateStatus","id","status","updateToDo","handleUpdateTask","handleTypeChange","handleSearch","e","query","target","filteredList","toLowerCase","match","length","children","active","fileName","_jsxFileName","lineNumber","columnNumber","className","toDoWrapper","toDoHeader","style","width","onChange","placeholder","onClick","type","size","marginLeft","options","label","toDoListCardWrapper","map","toDoCard","toDoCardHeader","color","toDoCardFooter","createdAt","toDoFooterAction","actionIcon","noTaskWrapper","confirmLoading","open","onOk","onCancel","marginBottom","TextArea","_c","$RefreshReg$"],"sources":["C:/Users/jflzn/Documents/ToDo/client/src/pages/ToDo/ToDoList.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react'\r\nimport Navbar from '../../components/Navbar'\r\nimport styles from './ToDoList.module.css';\r\nimport { Button, Divider, Empty, Input, Modal, Select, Tag, Tooltip, message } from 'antd';\r\nimport {getErrorMessage} from '../../util/GetError';\r\nimport { getUserDetails } from '../../util/GetUser';\r\nimport ToDoServices from '../../services/toDoServices';\r\nimport { useNavigate } from 'react-router';\r\nimport { CheckCircleFilled, CheckCircleOutlined, DeleteOutlined, EditOutlined } from '@ant-design/icons';\r\n\r\n\r\nfunction ToDoList() {\r\n   const [title,setTitle] = useState(\"\");\r\n   const [description,setDescription] = useState(\"\");\r\n   const [isAdding,setIsAdding] = useState(false);\r\n  const [loading,setLoading] = useState(false);\r\n  const [allToDo,setAllToDo] = useState([]);\r\n  const [currentEditItem,setCurrentEditItem] = useState(\"\");\r\n  const [isEditing,setIsEditing] = useState(false);\r\n  const [updatedTitle,setUpdatedTitle] = useState(\"\");\r\n  const [updatedDescription,setUpdatedDescription] = useState(\"\");\r\n  const [updatedStatus,setUpdatedStatus] = useState(\"\");\r\n  const [currentTaskType,setCurrentTaskType] = useState(\"incomplete\");\r\n  const [completedTodo,setCompletedTodo] = useState([]);\r\n  const [incompletedTodo,setIncompletedTodo] = useState([]);\r\n  const [currentTodoTask,setCurrentToDoTask] = useState([]);\r\n  const [filteredToDo,setFilteredToDo] = useState([]);\r\n\r\n  const navigate = useNavigate();\r\n\r\n  const getAllToDo = async ()=>{\r\n    try{\r\n      let user = getUserDetails();\r\n      console.log(user?.userId);\r\n      const response = await ToDoServices.getAllToDo(user?.userId);\r\n      console.log(response.data);\r\n      setAllToDo(response.data);\r\n    }catch(err){\r\n      console.log(err);\r\n      message.error(getErrorMessage(err));\r\n    }\r\n  }\r\n\r\n  useEffect(()=>{\r\n      let user = getUserDetails();\r\n        const getAllToDo = async ()=>{\r\n          try{\r\n            console.log(user?.userId);\r\n            const response = await ToDoServices.getAllToDo(user?.userId);\r\n            console.log(response.data);\r\n            setAllToDo(response.data);\r\n          }catch(err){\r\n            console.log(err);\r\n            message.error(getErrorMessage(err));\r\n          }\r\n        }\r\n      if(user && user?.userId){\r\n        getAllToDo();\r\n      }else{\r\n        navigate('/login');\r\n      }\r\n\r\n  },[navigate]);\r\n\r\n  useEffect(()=>{\r\n      const incomplete = allToDo.filter((item)=>item.isCompleted===false);\r\n      const complete = allToDo.filter((item)=>item.isCompleted===true);\r\n      setIncompletedTodo(incomplete);\r\n      setCompletedTodo(complete);\r\n      if(currentTaskType==='incomplete'){\r\n        setCurrentToDoTask(incomplete);\r\n      }else{\r\n        setCurrentToDoTask(complete)\r\n      }\r\n  },[allToDo,currentTaskType])\r\n\r\n   const handleSubmitTask = async ()=>{\r\n    setLoading(true);\r\n    try{\r\n      const userId = getUserDetails()?.userId;\r\n      const data = {\r\n        title,\r\n        description,\r\n        isCompleted:false,\r\n        createdBy:userId\r\n      }\r\n      const response = await ToDoServices.createToDo(data);\r\n      console.log(response.data);\r\n      setLoading(false);\r\n      message.success(\"Tarefa adicionada com Sucesso!\");\r\n      setIsAdding(false);\r\n      getAllToDo();\r\n    }catch(err){\r\n      console.log(err);\r\n      setLoading(false);\r\n      message.error(getErrorMessage(err))\r\n    }\r\n   }\r\n\r\n   const getFormattedDate = (value)=>{\r\n    let  date = new Date(value);\r\n    let dateString = date.toDateString();\r\n    let hh = date.getHours();\r\n    let min = date.getMinutes();\r\n    let ss = date.getSeconds();\r\n    let finalDate = `${dateString} at ${hh}:${min}:${ss}`;\r\n    return finalDate;\r\n  }\r\n\r\n  const handleEdit = (item)=>{\r\n    console.log(item);\r\n    setCurrentEditItem(item);\r\n    setUpdatedTitle(item?.title);\r\n    setUpdatedDescription(item?.description);\r\n    setUpdatedStatus(item?.isCompleted);\r\n    setIsEditing(true);\r\n  };\r\n\r\n  const handleDelete = async (item)=>{\r\n    try{\r\n      const response = await ToDoServices.deleteToDo(item._id);\r\n      console.log(response.data);\r\n      message.success(` Tarefa deletada com Sucesso!`);\r\n      getAllToDo();\r\n    }catch(err){\r\n      console.log(err);\r\n      message.error(getErrorMessage(err));\r\n    }\r\n  }\r\n\r\n  const handleUpdateStatus = async (id,status)=>{\r\n    console.log(id);\r\n    try{\r\n      const response = await ToDoServices.updateToDo(id,{isCompleted:status});\r\n      console.log(response.data);\r\n      message.success(\"Tarefa completada !\");\r\n      getAllToDo();\r\n    }catch(err){\r\n      console.log(err);\r\n      message.error(getErrorMessage(err));\r\n    }\r\n  }\r\n\r\n  const handleUpdateTask = async ()=>{\r\n      try{\r\n        setLoading(true);\r\n        const data = {\r\n          title:updatedTitle,\r\n          description:updatedDescription,\r\n          isCompleted:updatedStatus\r\n        };\r\n        console.log(data);\r\n        const response = await ToDoServices.updateToDo(currentEditItem?._id,data);\r\n        console.log(response.data);\r\n        message.success(`Tarefa atualizada com Sucesso!`);\r\n        setLoading(false);\r\n        setIsEditing(false);\r\n        getAllToDo();\r\n      }catch(err){\r\n        console.log(err);\r\n        setLoading(false);\r\n        message.error(getErrorMessage(err))\r\n      }\r\n  }\r\n\r\n  const handleTypeChange = (value)=>{\r\n    console.log(value);\r\n    setCurrentTaskType(value);\r\n    if(value==='incomplete'){\r\n      setCurrentToDoTask(incompletedTodo);\r\n    }else{\r\n      setCurrentToDoTask(completedTodo);\r\n    }\r\n  }\r\n\r\n  const handleSearch = (e)=>{\r\n    let query = e.target.value;\r\n    let filteredList = allToDo.filter((item)=>item.title.toLowerCase().match(query.toLowerCase()));\r\n    console.log(filteredList);\r\n    if(filteredList.length > 0 && query){\r\n      setFilteredToDo(filteredList);\r\n    }else{\r\n      setFilteredToDo([]);\r\n    }\r\n  }\r\n  return (\r\n    <>\r\n    <Navbar  active={\"myTask\"}/>\r\n    <section className={styles.toDoWrapper}>\r\n        <div className={styles.toDoHeader}>\r\n            <h2>Suas Tarefas</h2>\r\n            <Input style={{width:'50%'}} onChange={handleSearch} placeholder='Pesquise Sua Tarefa Aqui...' />\r\n            <div>\r\n              <Button onClick={()=>setIsAdding(true)} type=\"primary\" size=\"large\">Adicionar Tarefa</Button>\r\n              <Select\r\n                value={currentTaskType}\r\n                style={{width:180,marginLeft:'10px'}}\r\n                onChange={handleTypeChange}\r\n                size=\"large\"\r\n\r\n                options={[\r\n                  {value:\"incomplete\",label:'Incomplete'},\r\n                  {value:\"complete\",label:'Complete'}\r\n                ]}\r\n              />\r\n\r\n             \r\n            </div>\r\n        </div>\r\n        <Divider />\r\n\r\n        <div className={styles.toDoListCardWrapper}>\r\n          {filteredToDo.length > 0 ? filteredToDo.map((item)=>{\r\n            return(\r\n              <div key={item?._id} className={styles.toDoCard}>\r\n              <div >\r\n              <div className={styles.toDoCardHeader}>\r\n              <h3>{item?.title}</h3>\r\n              {item?.isCompleted ? <Tag color=\"cyan\">Completed</Tag> : <Tag color=\"red\">Incomplete</Tag>}\r\n              </div> \r\n              <p>{item?.description}</p>\r\n               </div>\r\n             \r\n               <div className={styles.toDoCardFooter}>\r\n               <Tag>{getFormattedDate(item?.createdAt)}</Tag>\r\n               <div className={styles.toDoFooterAction}>\r\n               <Tooltip title=\"Edit Task?\"><EditOutlined onClick={()=>handleEdit(item)} className={styles.actionIcon} /></Tooltip>\r\n                 <Tooltip title=\"Delete Task?\"><DeleteOutlined onClick={()=>handleDelete(item)} style={{color:'red'}}   className={styles.actionIcon}/></Tooltip>\r\n                 {item?.isCompleted ? <Tooltip title=\"Mark as Incomplete\"><CheckCircleFilled onClick={()=>handleUpdateStatus(item._id,false)} style={{color:'green'}}  className={styles.actionIcon} /></Tooltip> :<Tooltip title=\"Mark as Completed\"><CheckCircleOutlined onClick={()=>handleUpdateStatus(item._id,true)}  className={styles.actionIcon}/></Tooltip>}\r\n               </div>  \r\n               </div>\r\n               \r\n           </div>  \r\n            )\r\n          }) : currentTodoTask.length > 0  ? currentTodoTask.map((item)=>{\r\n            return(\r\n              <div key={item?._id} className={styles.toDoCard}>\r\n              <div >\r\n              <div className={styles.toDoCardHeader}>\r\n              <h3>{item?.title}</h3>\r\n              {item?.isCompleted ? <Tag color=\"cyan\">Completed</Tag> : <Tag color=\"red\">Incomplete</Tag>}\r\n              </div> \r\n              <p>{item?.description}</p>\r\n               </div>\r\n             \r\n               <div className={styles.toDoCardFooter}>\r\n               <Tag>{getFormattedDate(item?.createdAt)}</Tag>\r\n               <div className={styles.toDoFooterAction}>\r\n               <Tooltip title=\"Editar Tarefa?\"><EditOutlined onClick={()=>handleEdit(item)} className={styles.actionIcon} /></Tooltip>\r\n                 <Tooltip title=\"Deletar Tarefa?\"><DeleteOutlined onClick={()=>handleDelete(item)} style={{color:'red'}}   className={styles.actionIcon}/></Tooltip>\r\n                 {item?.isCompleted ? <Tooltip title=\"Mark as Incomplete\"><CheckCircleFilled onClick={()=>handleUpdateStatus(item._id,false)} style={{color:'green'}}  className={styles.actionIcon} /></Tooltip> :<Tooltip title=\"Mark as Completed\"><CheckCircleOutlined onClick={()=>handleUpdateStatus(item._id,true)}  className={styles.actionIcon}/></Tooltip>}\r\n               </div>  \r\n               </div>\r\n               \r\n           </div>  \r\n            )\r\n          }) : \r\n\r\n          <div className={styles.noTaskWrapper}>\r\n          <Empty />\r\n        </div> \r\n          \r\n          }\r\n        </div>\r\n\r\n       \r\n        <Modal confirmLoading={loading} title=\"Add New To Do Task\" open={isAdding} onOk={handleSubmitTask} onCancel={()=>setIsAdding(false)}>\r\n        <Input style={{marginBottom:'1rem'}} placeholder='Title' value={title} onChange={(e)=>setTitle(e.target.value)} />\r\n        <Input.TextArea placeholder='Description' value={description} onChange={(e)=>setDescription(e.target.value)} />\r\n      </Modal>\r\n\r\n      <Modal confirmLoading={loading} title={`Update ${currentEditItem.title}`} open={isEditing} onOk={handleUpdateTask} onCancel={()=>setIsEditing(false)}>\r\n        <Input style={{marginBottom:'1rem'}} placeholder='Updated Title' value={updatedTitle} onChange={(e)=>setUpdatedTitle(e.target.value)} />\r\n        <Input.TextArea style={{marginBottom:'1rem'}} placeholder='Updated Description' value={updatedDescription} onChange={(e)=>setUpdatedDescription(e.target.value)} />\r\n        <Select\r\n      \r\n      onChange={(value)=>setUpdatedStatus(value)}\r\n      value={updatedStatus}\r\n      options={[\r\n        \r\n        {\r\n          value: false,\r\n          label: 'Not Completed',\r\n        },\r\n\r\n        {\r\n          value: true,\r\n          label: 'Completed',\r\n        },\r\n     \r\n      ]}\r\n    />\r\n      </Modal>\r\n    </section>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default ToDoList"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}